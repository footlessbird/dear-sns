{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, List, Icon, Card } from \"antd\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport ProfileForm from \"../components/ProfileForm\";\nimport PostCard from \"../components/PostCard\";\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    if (me) {\n      dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        data: me.id\n      });\n    }\n  }, [me && me.id]);\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  return React.createElement(\"div\", null, React.createElement(ProfileForm, null), React.createElement(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"Following List\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: \"100%\"\n      }\n    }, \"Load More\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: \"20px\"\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"Follower List\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: \"100%\"\n      }\n    }, \"Load More\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: \"20px\"\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/pages/profile.js"],"names":["React","useEffect","useDispatch","useSelector","Button","List","Icon","Card","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_USER_POSTS_REQUEST","ProfileForm","PostCard","Profile","dispatch","state","user","me","followingList","followerList","post","mainPosts","type","data","id","onUnfollow","useCallback","userId","UNFOLLOW_USER_REQUEST","onRemoveFollower","REMOVE_FOLLOWER_REQUEST","marginBottom","gutter","xs","md","width","item","marginTop","nickname","map","c","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, List, Icon, Card } from \"antd\";\nimport {\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWINGS_REQUEST\n} from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport ProfileForm from \"../components/ProfileForm\";\nimport PostCard from \"../components/PostCard\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { me, followingList, followerList } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  useEffect(() => {\n    if (me) {\n      dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        data: me.id\n      });\n    }\n  }, [me && me.id]);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  return (\n    <div>\n      <ProfileForm />\n      <List\n        style={{ marginBottom: \"20px\" }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>Following List</div>}\n        loadMore={<Button style={{ width: \"100%\" }}>Load More</Button>}\n        bordered\n        dataSource={followingList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: \"20px\" }}>\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)}/>]}>\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <List\n        style={{ marginBottom: \"20px\" }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>Follower List</div>}\n        loadMore={<Button style={{ width: \"100%\" }}>Load More</Button>}\n        bordered\n        dataSource={followerList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: \"20px\" }}>\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <div>\n        {mainPosts.map(c => (\n          <PostCard key={+c.createdAt} post={c} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}