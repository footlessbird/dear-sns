{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport ImagesZoom from \"./ImagesZoom\";\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showImagesZoom = _useState2[0],\n      setShowImagesZoom = _useState2[1];\n\n  var onZoom = useCallback(function () {\n    showImagesZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return React.createElement(\"div\", null, React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      onClick: onZoom\n    }), showImagesZoom && React.createElement(ImagesZoom, {\n      images: images\n    }));\n  } else if (images.length === 2) {\n    return React.createElement(\"div\", null, React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      width: \"50%\"\n    }), React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[1].src),\n      width: \"50%\"\n    }));\n  } else {\n    return React.createElement(\"div\", null, React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      width: \"50%\"\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        width: \"50%\",\n        textAlign: \"center\",\n        verticalAlign: \"middle\"\n      }\n    }, React.createElement(Icon, {\n      type: \"plus\"\n    }), React.createElement(\"br\", null), images.length - 1, \"more images load\"));\n  }\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/components/PostImages.js"],"names":["React","useState","useCallback","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACWN,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,MAC1BO,cAD0B;AAAA,MACVC,iBADU;;AAEjC,MAAMC,MAAM,GAAGR,WAAW,CAAC,YAAM;AAC/BM,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAIA,MAAID,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,iCACE;AAAK,MAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,OAAO,EAAEF;AAA7D,MADF,EAEGF,cAAc,IAAI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAED;AAApB,MAFrB,CADF;AAMD,GAPD,MAOO,IAAIA,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AAC9B,WACE,iCACE;AAAK,MAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC;AAA1D,MADF,EAEE;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC;AAA1D,MAFF,CADF;AAMD,GAPM,MAOA;AACL,WACE,iCACE;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC;AAA1D,MADF,EAEE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILC,QAAAA,aAAa,EAAE;AAJV;AADT,OAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MARF,EASE,+BATF,EAUGT,MAAM,CAACI,MAAP,GAAgB,CAVnB,qBAFF,CADF;AAkBD;AACF,CAxCD;;AA0CAL,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEJ,SAAS,CAACe,OAAV,CACNf,SAAS,CAACgB,KAAV,CAAgB;AACdP,IAAAA,GAAG,EAAET,SAAS,CAACiB;AADD,GAAhB,CADM,EAINC;AALmB,CAAvB;AAOA,eAAef,UAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport ImagesZoom from \"./ImagesZoom\";\n\nconst PostImages = ({ images }) => {\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\n  const onZoom = useCallback(() => {\n    showImagesZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return (\n      <div>\n        <img src={`http://localhost:3306/${images[0].src}`} onClick={onZoom} />\n        {showImagesZoom && <ImagesZoom images={images} />}\n      </div>\n    );\n  } else if (images.length === 2) {\n    return (\n      <div>\n        <img src={`http://localhost:3306/${images[0].src}`} width=\"50%\" />\n        <img src={`http://localhost:3306/${images[1].src}`} width=\"50%\" />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <img src={`http://localhost:3306/${images[0].src}`} width=\"50%\" />\n        <div\n          style={{\n            display: \"inline-block\",\n            width: \"50%\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Icon type=\"plus\" />\n          <br />\n          {images.length - 1}\n          more images load\n        </div>\n      </div>\n    );\n  }\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string\n    })\n  ).isRequired\n};\nexport default PostImages;\n"]},"metadata":{},"sourceType":"module"}