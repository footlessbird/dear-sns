{"ast":null,"code":"import { Button, Card, Icon, List } from 'antd';\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nvar FollowList = memo(function (_ref) {\n  var header = _ref.header,\n      hasMore = _ref.hasMore,\n      onClickMore = _ref.onClickMore,\n      data = _ref.data,\n      onClickStop = _ref.onClickStop;\n  return React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, header),\n    loadMore: hasMore && React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: onClickMore\n    }, \"More\"),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onClickStop(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  });\n});\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  onClickMore: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n  onClickStop: PropTypes.func.isRequired\n};\nexport default FollowList;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/components/FollowList.js"],"names":["Button","Card","Icon","List","React","memo","PropTypes","FollowList","header","hasMore","onClickMore","data","onClickStop","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","propTypes","string","isRequired","bool","func","array"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,UAAU,GAAGF,IAAI,CAAC,gBAAyD;AAAA,MAAtDG,MAAsD,QAAtDA,MAAsD;AAAA,MAA9CC,OAA8C,QAA9CA,OAA8C;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC/E,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAE,iCAAMR,MAAN,CAJV;AAKE,IAAA,QAAQ,EAAEC,OAAO,IAAI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEP;AAA3C,cALvB;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEC,IAPd;AAQE,IAAA,UAAU,EAAE,oBAAAO,IAAI;AAAA,aACd,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAAlB,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAC,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,OAAO,EAAEP,WAAW,CAACM,IAAI,CAACE,EAAN;AAAjD,UAAD;AAAf,SACE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,QADF,CADF,CADc;AAAA;AARlB,IADF;AAkBD,CAnBsB,CAAvB;AAqBAd,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,MAAM,EAAEF,SAAS,CAACiB,MAAV,CAAiBC,UADJ;AAErBf,EAAAA,OAAO,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAFH;AAGrBd,EAAAA,WAAW,EAAEJ,SAAS,CAACoB,IAAV,CAAeF,UAHP;AAIrBb,EAAAA,IAAI,EAAEL,SAAS,CAACqB,KAAV,CAAgBH,UAJD;AAKrBZ,EAAAA,WAAW,EAAEN,SAAS,CAACoB,IAAV,CAAeF;AALP,CAAvB;AAQA,eAAejB,UAAf","sourcesContent":["import { Button, Card, Icon, List } from 'antd';\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst FollowList = memo(({ header, hasMore, onClickMore, data, onClickStop }) => {\n  return (\n    <List\n      style={{ marginBottom: '20px' }}\n      grid={{ gutter: 4, xs: 2, md: 3 }}\n      size=\"small\"\n      header={<div>{header}</div>}\n      loadMore={hasMore && <Button style={{ width: '100%' }} onClick={onClickMore}>More</Button>}\n      bordered\n      dataSource={data}\n      renderItem={item => (\n        <List.Item style={{ marginTop: '20px' }}>\n          <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onClickStop(item.id)} />]}>\n            <Card.Meta description={item.nickname} />\n          </Card>\n        </List.Item>\n      )}\n    />\n  );\n});\n\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  onClickMore: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n  onClickStop: PropTypes.func.isRequired,\n};\n\nexport default FollowList;"]},"metadata":{},"sourceType":"module"}