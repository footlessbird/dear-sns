{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n// import React, { useState, useCallback } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Icon } from \"antd\";\n// import ImagesZoom from \"./ImagesZoom\";\n// const PostImages = ({ images }) => {\n//   const [showImagesZoom, setShowImagesZoom] = useState(false);\n//   const onZoom = useCallback(() => {\n//     setShowImagesZoom(true);\n//   }, []);\n//   const onClose = useCallback(\n//     () => {\n//     setShowImagesZoom(false)        \n//     },\n//     [],\n// )\n//   if (images.length === 1) {\n//     return (\n//       <div>\n//         <img src={`http://localhost:3306/${images[0].src}`} onClick={onZoom} />\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//       </div>\n//     );\n//   } else if (images.length === 2) {\n//     return (\n//       <div>\n//         <div>\n//           <img\n//             src={`http://localhost:3306/${images[0].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           <img\n//             src={`http://localhost:3306/${images[1].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//         </div>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <div>\n//           <img\n//             src={`http://localhost:3306/${images[0].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           <div\n//             style={{\n//               display: \"inline-block\",\n//               width: \"50%\",\n//               textAlign: \"center\",\n//               verticalAlign: \"middle\"\n//             }}\n//             onClick={onZoom}\n//           >\n//             <Icon type=\"plus\" />\n//             <br />\n//             {images.length - 1}\n//             more images load\n//           </div>\n//         </div>\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//       </div>\n//     );\n//   }\n// };\n// PostImages.propTypes = {\n//   images: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       src: PropTypes.string\n//     })\n//   ).isRequired\n// };\n// export default PostImages;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showImagesZoom = _useState2[0],\n      setShowImagesZoom = _useState2[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  var onClose = useCallback(function () {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      onClick: onZoom\n    }), showImagesZoom && React.createElement(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", null, React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      width: \"50%\",\n      onClick: onZoom\n    }), React.createElement(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[1].src),\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && React.createElement(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", null, React.createElement(\"img\", {\n    src: \"http://localhost:3306/\".concat(images[0].src),\n    width: \"50%\",\n    onClick: onZoom\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom\n  }, React.createElement(Icon, {\n    type: \"plus\"\n  }), React.createElement(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && React.createElement(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACWL,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,MAC1BM,cAD0B;AAAA,MACVC,iBADU;;AAGjC,MAAMC,MAAM,GAAGT,WAAW,CAAC,YAAM;AAC/BQ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,MAAME,OAAO,GAAGV,WAAW,CAAC,YAAM;AAChCQ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,0CACE;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,OAAO,EAAEH;AAA7D,MADF,EAEGF,cAAc,IAAI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAFrB,CADF;AAMD;;AACD,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,0CACE,iCACE;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MADF,EAEE;AAAK,MAAA,GAAG,kCAA2BH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MAFF,CADF,EAKGF,cAAc,IAAI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MALrB,CADF;AASD;;AACD,SACE,0CACA,iCACE;AAAK,IAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,IAAA,KAAK,EAAC,KAA1D;AAAgE,IAAA,OAAO,EAAEH;AAAzE,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,aAAa,EAAE;AAA7E,KAAZ;AAAqG,IAAA,OAAO,EAAEP;AAA9G,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADF,EAEE,+BAFF,EAGGH,MAAM,CAACK,MAAP,GAAgB,CAHnB,iDAFF,CADA,EAUGJ,cAAc,IAAI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI;AAArC,IAVrB,CADF;AAcD,CA5CD;;AA8CAL,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACxCP,IAAAA,GAAG,EAAEV,SAAS,CAACkB;AADyB,GAAhB,CAAlB,EAEJC;AAHiB,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["// import React, { useState, useCallback } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Icon } from \"antd\";\n// import ImagesZoom from \"./ImagesZoom\";\n\n// const PostImages = ({ images }) => {\n//   const [showImagesZoom, setShowImagesZoom] = useState(false);\n//   const onZoom = useCallback(() => {\n//     setShowImagesZoom(true);\n//   }, []);\n\n//   const onClose = useCallback(\n//     () => {\n//     setShowImagesZoom(false)        \n//     },\n//     [],\n// )\n//   if (images.length === 1) {\n//     return (\n//       <div>\n//         <img src={`http://localhost:3306/${images[0].src}`} onClick={onZoom} />\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//       </div>\n//     );\n//   } else if (images.length === 2) {\n//     return (\n//       <div>\n//         <div>\n//           <img\n//             src={`http://localhost:3306/${images[0].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           <img\n//             src={`http://localhost:3306/${images[1].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//         </div>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <div>\n//           <img\n//             src={`http://localhost:3306/${images[0].src}`}\n//             width=\"50%\"\n//             onClick={onZoom}\n//           />\n//           <div\n//             style={{\n//               display: \"inline-block\",\n//               width: \"50%\",\n//               textAlign: \"center\",\n//               verticalAlign: \"middle\"\n//             }}\n//             onClick={onZoom}\n//           >\n//             <Icon type=\"plus\" />\n//             <br />\n//             {images.length - 1}\n//             more images load\n//           </div>\n//         </div>\n//         {showImagesZoom && <ImagesZoom images={images} onClose={onClose}/>}\n//       </div>\n//     );\n//   }\n// };\n\n// PostImages.propTypes = {\n//   images: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       src: PropTypes.string\n//     })\n//   ).isRequired\n// };\n// export default PostImages;\n\n\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({ images }) => {\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\n\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return (\n      <>\n        <img src={`http://localhost:3306/${images[0].src}`} onClick={onZoom} />\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n    );\n  }\n  if (images.length === 2) {\n    return (\n      <>\n        <div>\n          <img src={`http://localhost:3306/${images[0].src}`} width=\"50%\" onClick={onZoom} />\n          <img src={`http://localhost:3306/${images[1].src}`} width=\"50%\" onClick={onZoom} />\n        </div>\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n  );\n  }\n  return (\n    <>\n    <div>\n      <img src={`http://localhost:3306/${images[0].src}`} width=\"50%\" onClick={onZoom} />\n      <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom}>\n        <Icon type=\"plus\" />\n        <br />\n        {images.length - 1}\n        개의 사진 더보기\n      </div>\n    </div>\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n    </>\n  );\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n  })).isRequired,\n};\n\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}