{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var initState = {\n  // isLoggedIn: false, // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  loginError: \"\",\n  // 로그인 에러\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpError: \"\",\n  // 회원가입 에러\n  // user: null\n  me: null,\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; // 액션 타입\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var LOAD_FOLLOW_REQUEST = \"LOAD_FOLLOW_REQUEST\";\nexport var LOAD_FOLLOW_SUCCESS = \"LOAD_FOLLOW_SUCCESS\";\nexport var LOAD_FOLLOW_FAILURE = \"LOAD_FOLLOW_FAILURE\";\nexport var FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport var FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport var FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\nexport var UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport var UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport var UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\nexport var REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport var REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport var REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport var EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport var EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport var EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE'; //  동기요청의 경우 비동기 처럼 request -> success or failure 와 같이 기다리는 것 없이 바로 실행되는 것이라서\n//  redux-saga가 필요 없다\n//  export const INCREMENT_NUMBER = 'INCREMENT_NUMBER'\n// 액션에 넣을 데이터가 동적일 경우 함수로 작성\n\n/*\nexport const signUpRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\n\nexport const loginRequestAction = data => {\n  type: LOG_IN_REQUEST, data;\n};\n\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\n*/\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      // console.log(action.data)\n      return _objectSpread({}, state, {\n        // isLoggedIn: true,\n        // user: action.data\n        // user: dummyUser\n        isLoggingIn: true,\n        loginError: \"\"\n      });\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          // isLoggedIn: true,\n          me: action.data\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          // isLoggedIn: false,\n          loginError: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoggingOut: false,\n        // isLoggedIn: false,\n        me: null\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread({}, state, {\n        isSigningUp: true,\n        isSignedUp: false,\n        signUpError: \"\"\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread({}, state, {\n        isSigningUp: false,\n        isSignedUp: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread({}, state, {\n        isSigningUp: false,\n        signUpError: action.error\n      });\n    //\n\n    /*\n    case LOAD_USER_REQUEST:\n      return {\n        ...state\n      };\n    case LOAD_USER_SUCCESS:\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data\n      };\n    case LOAD_USER_FAILURE:\n      return {\n        ...state\n      };\n      */\n    //\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Followings))\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followingList: state.followingList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Posts))\n          })\n        });\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followerList: state.followerList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/reducers/user.js"],"names":["initState","isLoggingOut","isLoggingIn","loginError","isSignedUp","isSigningUp","signUpError","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","reducer","state","action","type","data","error","Followings","id","filter","v","Posts","Followers"],"mappings":"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","sourcesContent":["export const initState = {\n  // isLoggedIn: false, // 로그인 여부\n  isLoggingOut: false, // 로그아웃 시도중\n  isLoggingIn: false, // 로그인 시도중\n  loginError: \"\", // 로그인 에러\n  isSignedUp: false, // 회원가입 성공\n  isSigningUp: false, // 회원가입 시도중\n  signUpError: \"\", // 회원가입 에러\n  // user: null\n  me: null,\n  followingList: [], // 팔로잉 리스트\n  followerList: [], // 팔로워 리스트\n  userInfo: null // 남의 정보\n};\n\n// 액션 타입\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const LOAD_FOLLOW_REQUEST = \"LOAD_FOLLOW_REQUEST\";\nexport const LOAD_FOLLOW_SUCCESS = \"LOAD_FOLLOW_SUCCESS\";\nexport const LOAD_FOLLOW_FAILURE = \"LOAD_FOLLOW_FAILURE\";\n\nexport const FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport const FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport const FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\n\nexport const UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport const UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport const UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\n\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\n\n\n\n//  동기요청의 경우 비동기 처럼 request -> success or failure 와 같이 기다리는 것 없이 바로 실행되는 것이라서\n//  redux-saga가 필요 없다\n//  export const INCREMENT_NUMBER = 'INCREMENT_NUMBER'\n\n// 액션에 넣을 데이터가 동적일 경우 함수로 작성\n\n/*\nexport const signUpRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\n\nexport const loginRequestAction = data => {\n  type: LOG_IN_REQUEST, data;\n};\n\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\n*/\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      // console.log(action.data)\n      return {\n        ...state,\n        // isLoggedIn: true,\n        // user: action.data\n        // user: dummyUser\n        isLoggingIn: true,\n        loginError: \"\"\n      };\n\n    case LOG_IN_SUCCESS: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        // isLoggedIn: true,\n        me: action.data\n      };\n    }\n    case LOG_IN_FAILURE: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        // isLoggedIn: false,\n        loginError: action.error,\n        me: null\n      };\n    }\n    case LOG_OUT_REQUEST: {\n      return {\n        ...state,\n        isLoggingOut: true\n      };\n    }\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLoggingOut: false,\n        // isLoggedIn: false,\n        me: null\n      };\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        isSigningUp: true,\n        isSignedUp: false,\n        signUpError: \"\"\n      };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        isSigningUp: false,\n        isSignedUp: true\n      };\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpError: action.error\n      };\n    //\n    /*\n    case LOAD_USER_REQUEST:\n      return {\n        ...state\n      };\n    case LOAD_USER_SUCCESS:\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data\n      };\n    case LOAD_USER_FAILURE:\n      return {\n        ...state\n      };\n      */\n    //\n    case LOAD_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_USER_SUCCESS: {\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data\n      };\n    }\n    case LOAD_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n\n    case FOLLOW_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case FOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: [{ id: action.data }, ...state.me.Followings]\n        }\n      };\n    }\n    case FOLLOW_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case UNFOLLOW_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case UNFOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: state.me.Followings.filter(v => v.id !== action.data)\n        },\n        followingList: state.followingList.filter(v => v.id !== action.data)\n      };\n    }\n    case UNFOLLOW_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case ADD_POST_TO_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: [{ id: action.data }, ...state.me.Posts]\n        }\n      };\n    }\n    case LOAD_FOLLOWERS_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWERS_SUCCESS: {\n      return {\n        ...state,\n        followerList: action.data\n      };\n    }\n    case LOAD_FOLLOWERS_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWINGS_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWINGS_SUCCESS: {\n      return {\n        ...state,\n        followingList: action.data\n      };\n    }\n    case LOAD_FOLLOWINGS_FAILURE: {\n      return {\n        ...state\n      };\n    }\n\n    case REMOVE_FOLLOWER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case REMOVE_FOLLOWER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followers: state.me.Followers.filter(v => v.id !== action.data)\n        },\n        followerList: state.followerList.filter(v => v.id !== action.data)\n      };\n    }\n    case REMOVE_FOLLOWER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}