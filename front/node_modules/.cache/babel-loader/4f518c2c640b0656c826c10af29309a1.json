{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from \"antd\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  var imageRef = useRef();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  useEffect(function () {\n    setText(\"\");\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert(\"Please write some content for your post\");\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return (// <Form\n    //   style={{ margin: '10px 0 20px' }}\n    //   encType=\"multipart/form-data\"\n    //   onSubmit={onSubmitForm}\n    // >\n    //   <Input.TextArea\n    //     maxLength={140}\n    //     placeholder=\"Tell your story to share with Dear\"\n    //     value={text}\n    //     onChange={onChangeText}\n    //   />\n    //   <div>\n    //     <input type=\"file\" multiple hidden />\n    //     <Button>Upload Image</Button>\n    //     <Button\n    //       type=\"primary\"\n    //       htmlType=\"submit\"\n    //       loading={isAddingPost}\n    //       style={{ float: 'right' }}\n    //     >\n    //       Post\n    //     </Button>\n    //   </div>\n    //   <div>\n    //     {imagePaths.map(v => {\n    //       return (\n    //         <div key={v} style={{ display: 'inline-block' }}>\n    //           <img\n    //             src={`http://localhost:3000/${v}`}\n    //             style={{ width: '200px' }}\n    //             alt={v}\n    //           />\n    //           <div>\n    //             <Button>Remove</Button>\n    //           </div>\n    //         </div>\n    //       );\n    //     })}\n    //   </div>\n    // </Form>\n    React.createElement(Form, {\n      style: {\n        margin: \"10px 0 20px\"\n      },\n      encType: \"multipart/form-data\",\n      onSubmit: onSubmitForm\n    }, React.createElement(Input.TextArea, {\n      maxLength: 140,\n      placeholder: \"Tell your story to share with Dear\",\n      value: text,\n      onChange: onChangeText\n    }), React.createElement(\"div\", null, React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput,\n      onChange: onChangeImages\n    }), React.createElement(Button, {\n      onClick: onClickImageUpload\n    }, \"Image Upload\"), React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        float: \"right\"\n      },\n      htmlType: \"submit\",\n      loading: isAddingPost\n    }, \"Post\")), React.createElement(\"div\", null, imagePaths.map(function (v) {\n      return React.createElement(\"div\", {\n        key: v,\n        style: {\n          display: \"inline-block\"\n        }\n      }, React.createElement(\"img\", {\n        src: \"http://localhost:3000/\".concat(v),\n        style: {\n          width: \"200px\"\n        },\n        alt: v\n      }), React.createElement(\"div\", null, React.createElement(Button, null, \"Remove\")));\n    })))\n  );\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","useSelector","useDispatch","Form","Input","Button","ADD_POST_REQUEST","PostForm","dispatch","state","post","imagePaths","isAddingPost","postAdded","imageRef","text","setText","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeText","target","value","margin","imageInput","onChangeImages","onClickImageUpload","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from \"antd\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\n    state => state.post\n  );\n  const imageRef = useRef();\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    setText(\"\");\n  }, [postAdded === true]);\n\n  const onSubmitForm = useCallback(\n    e => {\n      e.preventDefault();\n      if (!text || !text.trim()) {\n        return alert(\"Please write some content for your post\");\n      }\n\n      dispatch({\n        type: ADD_POST_REQUEST,\n        data: {\n          content: text.trim()\n        }\n      });\n    },\n    [text]\n  );\n\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n\n  return (\n    // <Form\n    //   style={{ margin: '10px 0 20px' }}\n    //   encType=\"multipart/form-data\"\n    //   onSubmit={onSubmitForm}\n    // >\n    //   <Input.TextArea\n    //     maxLength={140}\n    //     placeholder=\"Tell your story to share with Dear\"\n    //     value={text}\n    //     onChange={onChangeText}\n    //   />\n    //   <div>\n    //     <input type=\"file\" multiple hidden />\n    //     <Button>Upload Image</Button>\n    //     <Button\n    //       type=\"primary\"\n    //       htmlType=\"submit\"\n    //       loading={isAddingPost}\n    //       style={{ float: 'right' }}\n    //     >\n    //       Post\n    //     </Button>\n    //   </div>\n    //   <div>\n    //     {imagePaths.map(v => {\n    //       return (\n    //         <div key={v} style={{ display: 'inline-block' }}>\n    //           <img\n    //             src={`http://localhost:3000/${v}`}\n    //             style={{ width: '200px' }}\n    //             alt={v}\n    //           />\n    //           <div>\n    //             <Button>Remove</Button>\n    //           </div>\n    //         </div>\n    //       );\n    //     })}\n    //   </div>\n    // </Form>\n\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onSubmit={onSubmitForm}\n    >\n      <Input.TextArea\n        maxLength={140}\n        placeholder=\"Tell your story to share with Dear\"\n        value={text}\n        onChange={onChangeText}\n      />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\n        <Button onClick={onClickImageUpload}>Image Upload</Button>\n        <Button\n          type=\"primary\"\n          style={{ float: \"right\" }}\n          htmlType=\"submit\"\n          loading={isAddingPost}\n        >\n          Post\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map(v => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3000/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button>Remove</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}