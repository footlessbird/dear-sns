{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kangsung-yun/react-sns/front/components/PostCard.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { Button, Avatar, Card, Icon, Form, Input, List, Comment } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentText = _useState4[0],\n      setCommentText = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    }); // 댓글창이 열려있으면 닫고 닫혀있으면 열 수 있도록\n  }, []);\n  var onSubmitComment = useCallback(function () {}, []);\n  var onChangeCommentText = useCallback(function () {}, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: +post.createdAt,\n    cover: post.img && React.createElement(\"img\", {\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    actions: [React.createElement(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })],\n    extra: React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Follow\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), commentFormOpened && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Comment\")), React.createElement(List, {\n    header: \"\".concat(post.Comments ? post.Comments.length : 0, \" comments\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: function renderItem(item) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        author: item.User.nickname,\n        avatar: React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, item.User.nickname[0]),\n        content: item.content,\n        datetime: item.createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/components/PostCard.js"],"names":["React","useState","useCallback","Button","Avatar","Card","Icon","Form","Input","List","Comment","PropTypes","useSelector","useDispatch","PostCard","post","commentFormOpened","setCommentFormOpened","commentText","setCommentText","state","user","me","dispatch","onToggleComment","prev","onSubmitComment","onChangeCommentText","createdAt","img","User","nickname","content","Comments","length","item","propTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Button, Avatar, Card, Icon, Form, Input, List, Comment } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst PostCard = ({ post }) => {\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [commentText, setCommentText] = useState(\"\");\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev); // 댓글창이 열려있으면 닫고 닫혀있으면 열 수 있도록\n  }, []);\n\n  const onSubmitComment = useCallback(() => {}, []);\n\n  const onChangeCommentText = useCallback(() => {}, []);\n\n  return (\n    <div>\n      <Card\n        key={+post.createdAt}\n        cover={post.img && <img src={post.img} />}\n        actions={[\n          <Icon type=\"retweet\" key=\"retweet\" />,\n          <Icon type=\"heart\" key=\"heart\" />,\n          <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\n          <Icon type=\"ellipsis\" key=\"ellipsis\" />\n        ]}\n        extra={<Button>Follow</Button>}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <Form onSubmit={onSubmitComment}>\n            <Form.Item>\n              <Input.TextArea\n                rows={4}\n                value={commentText}\n                onChange={onChangeCommentText}\n              />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Comment\n            </Button>\n          </Form>\n          <List\n            header={`${post.Comments ? post.Comments.length : 0} comments`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comment || []}\n            renderItem={item => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                  datetime={item.createdAt}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}