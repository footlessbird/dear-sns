{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kangsung-yun/react-sns/front/pages/signup.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n/*\n    함수 컴포넌트는 state가 바뀌면 signup.js 컴포넌트가 통째로 재실행 됨\n    따라서 함수 역시 새로 생성됨\n    그 함수를 전달받은 자식 컴포넌트들은 렌더링을 다시함 e.g <Form onSubmit={onSubmit}>\n    자바스크립트는 함수도 객체기때문에 객체는 새로생성되면 이전객체와는 다른 객체가 됨\n    그러면 의도치 않는 리렌더링이 발생됨\n    그러므로 props로 넘겨주는 함수는 useCallback 필수 (자식컴포넌트에 전달하는 함수)\n*/\n\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport Layout from \"../components/Layout\";\nimport { signUpAction, SIGN_UP_REQUEST } from \"../reducers/user\"; //  custom hook\n\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setter = _useState2[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nvar Signup = function Signup() {\n  //   const [id, setId] = useState(\"\");\n  //   const [nick, setNick] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordConfirm = _useState4[0],\n      setPasswordConfirm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordError = _useState6[0],\n      setPasswordError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      term = _useState8[0],\n      setTerm = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      termError = _useState10[0],\n      setTermError = _useState10[1];\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(\"\"),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {}, [me.id]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordConfirm) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    } // dispatch(signUpAction({\n    //   id,\n    //   password,\n    //   nick\n    // }))\n\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        id: id,\n        password: password,\n        nick: nick\n      }\n    });\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      term: term\n    }); // useCallback을 쓸 땐 함수 내부에서 쓰는 state를 dependency 배열에 넣어준다\n    // [password, passwordConfirm, term]\n  }, [password, passwordConfirm, term]);\n  /*\n  const onChangeId = e => {\n    setId(e.target.value);\n  };\n   const onChangeNick = e => {\n    setNick(e.target.value);\n  };\n   const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n  */\n\n  var onChangePasswordConfirm = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordConfirm(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"ID\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Nick Name\"), React.createElement(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password-confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Password Confirm\"), React.createElement(Input, {\n    name: \"user-password-confirm\",\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordConfirm,\n    value: passwordConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), passwordError && React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Password should match\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    name: \"user-term\",\n    onChange: onChangeTerm,\n    value: term,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"I agree with the term\"), termError && React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Please check the box 'I agree with the term'\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Done\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/kangsung-yun/react-sns/front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","useDispatch","useSelector","Head","Router","Form","Input","Checkbox","Button","Layout","signUpAction","SIGN_UP_REQUEST","useInput","initValue","value","setter","handler","e","target","Signup","passwordConfirm","setPasswordConfirm","passwordError","setPasswordError","term","setTerm","termError","setTermError","id","onChangeId","nick","onChangeNick","password","onChangePassword","dispatch","state","user","isSigningUp","me","onSubmit","preventDefault","type","data","console","log","onChangePasswordConfirm","onChangeTerm","checked","padding","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA;;;;;;;;;AAQA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,MAA9C;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAsB;AAAA,MAArBC,SAAqB,uEAAT,IAAS;;AAAA,kBACpBf,QAAQ,CAACe,SAAD,CADY;AAAA;AAAA,MACrCC,KADqC;AAAA,MAC9BC,MAD8B;;AAE5C,MAAMC,OAAO,GAAGjB,WAAW,CAAC,UAAAkB,CAAC,EAAI;AAC/BF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQE,OAAR,CAAP;AACD,CANM;;AAQP,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB;AACA;AACA;AAHmB,mBAI2BrB,QAAQ,CAAC,EAAD,CAJnC;AAAA;AAAA,MAIZsB,eAJY;AAAA,MAIKC,kBAJL;;AAAA,mBAKuBvB,QAAQ,CAAC,KAAD,CAL/B;AAAA;AAAA,MAKZwB,aALY;AAAA,MAKGC,gBALH;;AAAA,mBAMKzB,QAAQ,CAAC,KAAD,CANb;AAAA;AAAA,MAMZ0B,IANY;AAAA,MAMNC,OANM;;AAAA,mBAOe3B,QAAQ,CAAC,KAAD,CAPvB;AAAA;AAAA,MAOZ4B,SAPY;AAAA,MAODC,YAPC;;AAAA,kBASMf,QAAQ,CAAC,EAAD,CATd;AAAA;AAAA,MASZgB,EATY;AAAA,MASRC,UATQ;;AAAA,mBAUUjB,QAAQ,CAAC,EAAD,CAVlB;AAAA;AAAA,MAUZkB,IAVY;AAAA,MAUNC,YAVM;;AAAA,mBAWkBnB,QAAQ,CAAC,EAAD,CAX1B;AAAA;AAAA,MAWZoB,QAXY;AAAA,MAWFC,gBAXE;;AAanB,MAAMC,QAAQ,GAAGjC,WAAW,EAA5B;;AAbmB,qBAcSC,WAAW,CAAC,UAAAiC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAdpB;AAAA,MAcXC,WAdW,gBAcXA,WAdW;AAAA,MAcEC,EAdF,gBAcEA,EAdF;;AAgBnBtC,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACsC,EAAE,CAACV,EAAJ,CAAX,CAAT;AAEA,MAAMW,QAAQ,GAAGxC,WAAW,CAC1B,UAAAkB,CAAC,EAAI;AACHA,IAAAA,CAAC,CAACuB,cAAF;;AACA,QAAIR,QAAQ,KAAKZ,eAAjB,EAAkC;AAChC,aAAOG,gBAAgB,CAAC,IAAD,CAAvB;AACD;;AACD,QAAI,CAACC,IAAL,EAAW;AACT,aAAOG,YAAY,CAAC,IAAD,CAAnB;AACD,KAPE,CAQH;AACA;AACA;AACA;AACA;;;AACA,WAAOO,QAAQ,CAAC;AACdO,MAAAA,IAAI,EAAE9B,eADQ;AAEd+B,MAAAA,IAAI,EAAE;AACJd,QAAAA,EAAE,EAAFA,EADI;AAEJI,QAAAA,QAAQ,EAARA,QAFI;AAGJF,QAAAA,IAAI,EAAJA;AAHI;AAFQ,KAAD,CAAf;AASAa,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVhB,MAAAA,EAAE,EAAFA,EADU;AAEVE,MAAAA,IAAI,EAAJA,IAFU;AAGVE,MAAAA,QAAQ,EAARA,QAHU;AAIVZ,MAAAA,eAAe,EAAfA,eAJU;AAKVI,MAAAA,IAAI,EAAJA;AALU,KAAZ,EAtBG,CA6BH;AACA;AACD,GAhCyB,EAiC1B,CAACQ,QAAD,EAAWZ,eAAX,EAA4BI,IAA5B,CAjC0B,CAA5B;AAoCA;;;;;;;;;;;;AAcA,MAAMqB,uBAAuB,GAAG9C,WAAW,CACzC,UAAAkB,CAAC,EAAI;AACHM,IAAAA,gBAAgB,CAACN,CAAC,CAACC,MAAF,CAASJ,KAAT,KAAmBkB,QAApB,CAAhB;AACAX,IAAAA,kBAAkB,CAACJ,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAlB;AACD,GAJwC,EAKzC,CAACkB,QAAD,CALyC,CAA3C;AAQA,MAAMc,YAAY,GAAG/C,WAAW,CAAC,UAAAkB,CAAC,EAAI;AACpCU,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,OAAO,CAACR,CAAC,CAACC,MAAF,CAAS6B,OAAV,CAAP;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAER,QAAhB;AAA0B,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEpB,EAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEC,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAEC,IAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEE,gBAJZ;AAKE,IAAA,KAAK,EAAED,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CApBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,uBADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEa,uBAJZ;AAKE,IAAA,KAAK,EAAEzB,eALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGE,aAAa,IACZ;AAAK,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVJ,CA9BF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAEH,YAArC;AAAmD,IAAA,KAAK,EAAEtB,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAIGE,SAAS,IACR;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDALJ,CA3CF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEZ,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CArDF,CAFF,CADF;AAgED,CAjJD;;AAmJA,eAAelB,MAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n/*\n    함수 컴포넌트는 state가 바뀌면 signup.js 컴포넌트가 통째로 재실행 됨\n    따라서 함수 역시 새로 생성됨\n    그 함수를 전달받은 자식 컴포넌트들은 렌더링을 다시함 e.g <Form onSubmit={onSubmit}>\n    자바스크립트는 함수도 객체기때문에 객체는 새로생성되면 이전객체와는 다른 객체가 됨\n    그러면 의도치 않는 리렌더링이 발생됨\n    그러므로 props로 넘겨주는 함수는 useCallback 필수 (자식컴포넌트에 전달하는 함수)\n*/\nimport Head from \"next/head\";\nimport Router from \"next/router\";\n\nimport { Form, Input, Checkbox, Button } from \"antd\";\n\nimport Layout from \"../components/Layout\";\nimport { signUpAction, SIGN_UP_REQUEST } from \"../reducers/user\";\n\n//  custom hook\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  //   const [id, setId] = useState(\"\");\n  //   const [nick, setNick] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [term, setTerm] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const [id, onChangeId] = useInput(\"\");\n  const [nick, onChangeNick] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  const dispatch = useDispatch();\n  const { isSigningUp, me } = useSelector(state => state.user);\n\n  useEffect(() => {}, [me.id]);\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (password !== passwordConfirm) {\n        return setPasswordError(true);\n      }\n      if (!term) {\n        return setTermError(true);\n      }\n      // dispatch(signUpAction({\n      //   id,\n      //   password,\n      //   nick\n      // }))\n      return dispatch({\n        type: SIGN_UP_REQUEST,\n        data: {\n          id,\n          password,\n          nick\n        }\n      });\n\n      console.log({\n        id,\n        nick,\n        password,\n        passwordConfirm,\n        term\n      });\n      // useCallback을 쓸 땐 함수 내부에서 쓰는 state를 dependency 배열에 넣어준다\n      // [password, passwordConfirm, term]\n    },\n    [password, passwordConfirm, term]\n  );\n\n  /*\n  const onChangeId = e => {\n    setId(e.target.value);\n  };\n\n  const onChangeNick = e => {\n    setNick(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n  */\n\n  const onChangePasswordConfirm = useCallback(\n    e => {\n      setPasswordError(e.target.value !== password);\n      setPasswordConfirm(e.target.value);\n    },\n    [password]\n  );\n\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n        <div>\n          <label htmlFor=\"user-id\">ID</label>\n          <Input\n            type=\"text\"\n            name=\"user-id\"\n            value={id}\n            required\n            onChange={onChangeId}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user-nick\">Nick Name</label>\n          <Input\n            name=\"user-nick\"\n            value={nick}\n            required\n            onChange={onChangeNick}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">Password</label>\n          <Input\n            name=\"user-password\"\n            type=\"password\"\n            required\n            onChange={onChangePassword}\n            value={password}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user-password-confirm\">Password Confirm</label>\n          <Input\n            name=\"user-password-confirm\"\n            type=\"password\"\n            required\n            onChange={onChangePasswordConfirm}\n            value={passwordConfirm}\n          />\n          {passwordError && (\n            <div style={{ color: \"red\" }}>Password should match</div>\n          )}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" onChange={onChangeTerm} value={term}>\n            I agree with the term\n          </Checkbox>\n          {termError && (\n            <div style={{ color: \"red\" }}>\n              Please check the box 'I agree with the term'\n            </div>\n          )}\n        </div>\n        <div>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>\n            Done\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}