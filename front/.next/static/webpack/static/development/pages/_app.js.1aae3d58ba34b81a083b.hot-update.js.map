{"version":3,"file":"static/webpack/static/development/pages/_app.js.1aae3d58ba34b81a083b.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["// call은 함수를 동기적으로 호출\n// fork는 함수를 비동기적으로 호출\n// put은 액션 dispatch\nimport { all, fork, takeLatest, call, put } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST } from \"../reducers/user\";\n// import { sign } from \"crypto\";\n\n// 서버에 요청을 보냄\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({ // put은 dispatch와 동일\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) { // loginAPI 실패\n    console.error(e);\n    yield put({\n        type: LOG_IN_FAILURE\n    })\n  }\n}\n\nfunction* watchLogin() {\n  //  talkeLatest는 LOG_IN 액션이 디스패치 될 때까지 기다렸다\n  //  디스패치 됬을 때 login 제너레이터 호출\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp(){\n  yield takeEvery(SIGN_UP_REQUEST, signUp)\n}\n\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;AAcA;;;AAMA;;;AAKA;AACA;AApCA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AAPA;AAQA;AACA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;A","sourceRoot":""}