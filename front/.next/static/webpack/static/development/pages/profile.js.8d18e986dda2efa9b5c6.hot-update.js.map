{"version":3,"file":"static/webpack/static/development/pages/profile.js.8d18e986dda2efa9b5c6.hot-update.js","sources":["webpack:///./containers/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, setCommentText] = useState('');\n  const { commentAdded, isAddingComment } = useSelector(state => state.post);\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmitComment = useCallback((e) => {\n    e.preventDefault();\n    if (!me) {\n      return alert('Please login first');\n    }\n    return dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id,\n        content: commentText,\n      },\n    });\n  }, [me && me.id, commentText]);\n\n  useEffect(() => {\n    setCommentText('');\n  }, [commentAdded === true]);\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, []);\n\n  return (\n    <Form onSubmit={onSubmitComment}>\n      <Form.Item>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n      </Form.Item>\n      <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment}>Comment</Button>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAFA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}