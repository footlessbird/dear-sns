{"version":3,"file":"static/webpack/static/development/pages/index.js.8a1c74fc9b4468900759.hot-update.js","sources":["webpack:///./reducers/user.js"],"sourcesContent":["export const initState = {\n  // isLoggedIn: false, // 로그인 여부\n  isLoggingOut: false, // 로그아웃 시도중\n  isLoggingIn: false, // 로그인 시도중\n  loginError: \"\", // 로그인 에러\n  isSignedUp: false, // 회원가입 성공\n  isSigningUp: false, // 회원가입 시도중\n  signUpError: \"\", // 회원가입 에러\n  // user: null\n  me: null,\n  followingList: [], // 팔로잉 리스트\n  followerList: [], // 팔로워 리스트\n  userInfo: null, // 남의 정보\n  isEditingNickname: false, // 이름 변경 중\n  editNicknameError: \"\" // 이름 변경 실패 사유\n};\n\n// 액션 타입\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const LOAD_FOLLOW_REQUEST = \"LOAD_FOLLOW_REQUEST\";\nexport const LOAD_FOLLOW_SUCCESS = \"LOAD_FOLLOW_SUCCESS\";\nexport const LOAD_FOLLOW_FAILURE = \"LOAD_FOLLOW_FAILURE\";\n\nexport const FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport const FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport const FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\n\nexport const UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport const UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport const UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\n\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\nexport const LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport const LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport const LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\n\nexport const LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\nexport const LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\nexport const LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\n\nexport const EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\nexport const EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\nexport const EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\n\n//  동기요청의 경우 비동기 처럼 request -> success or failure 와 같이 기다리는 것 없이 바로 실행되는 것이라서\n//  redux-saga가 필요 없다\n//  export const INCREMENT_NUMBER = 'INCREMENT_NUMBER'\n\n// 액션에 넣을 데이터가 동적일 경우 함수로 작성\n\n/*\nexport const signUpRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\n\nexport const loginRequestAction = data => {\n  type: LOG_IN_REQUEST, data;\n};\n\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\n*/\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      // console.log(action.data)\n      return {\n        ...state,\n        // isLoggedIn: true,\n        // user: action.data\n        // user: dummyUser\n        isLoggingIn: true,\n        loginError: \"\"\n      };\n\n    case LOG_IN_SUCCESS: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        // isLoggedIn: true,\n        me: action.data\n      };\n    }\n    case LOG_IN_FAILURE: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        // isLoggedIn: false,\n        loginError: action.error,\n        me: null\n      };\n    }\n    case LOG_OUT_REQUEST: {\n      return {\n        ...state,\n        isLoggingOut: true\n      };\n    }\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLoggingOut: false,\n        // isLoggedIn: false,\n        me: null\n      };\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        isSigningUp: true,\n        isSignedUp: false,\n        signUpError: \"\"\n      };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        isSigningUp: false,\n        isSignedUp: true\n      };\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpError: action.error\n      };\n    //\n    /*\n    case LOAD_USER_REQUEST:\n      return {\n        ...state\n      };\n    case LOAD_USER_SUCCESS:\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data\n      };\n    case LOAD_USER_FAILURE:\n      return {\n        ...state\n      };\n      */\n    //\n    case LOAD_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_USER_SUCCESS: {\n      if (action.me) {\n        return {\n          ...state,\n          me: action.data\n        };\n      }\n      return {\n        ...state,\n        userInfo: action.data\n      };\n    }\n    case LOAD_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n\n    case FOLLOW_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case FOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: [{ id: action.data }, ...state.me.Followings]\n        }\n      };\n    }\n    case FOLLOW_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case UNFOLLOW_USER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case UNFOLLOW_USER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followings: state.me.Followings.filter(v => v.id !== action.data)\n        },\n        followingList: state.followingList.filter(v => v.id !== action.data)\n      };\n    }\n    case UNFOLLOW_USER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case ADD_POST_TO_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: [{ id: action.data }, ...state.me.Posts]\n        }\n      };\n    }\n    case REMOVE_POST_OF_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: state.me.Posts.filter(v => v.id !== action.data)\n        }\n      };\n    }\n\n    case LOAD_FOLLOWERS_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWERS_SUCCESS: {\n      return {\n        ...state,\n        followerList: action.data\n      };\n    }\n    case LOAD_FOLLOWERS_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWINGS_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case LOAD_FOLLOWINGS_SUCCESS: {\n      return {\n        ...state,\n        followingList: action.data\n      };\n    }\n    case LOAD_FOLLOWINGS_FAILURE: {\n      return {\n        ...state\n      };\n    }\n\n    case REMOVE_FOLLOWER_REQUEST: {\n      return {\n        ...state\n      };\n    }\n    case REMOVE_FOLLOWER_SUCCESS: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Followers: state.me.Followers.filter(v => v.id !== action.data)\n        },\n        followerList: state.followerList.filter(v => v.id !== action.data)\n      };\n    }\n    case REMOVE_FOLLOWER_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    case EDIT_NICKNAME_REQUEST: {\n      return {\n        ...state,\n        isEditingNickname: true,\n        editNicknameErrorReason: \"\"\n      };\n    }\n    case EDIT_NICKNAME_SUCCESS: {\n      return {\n        ...state,\n        isEditingNickname: false,\n        me: {\n          ...state.me,\n          nickname: action.data\n        }\n      };\n    }\n    case EDIT_NICKNAME_FAILURE: {\n      return {\n        ...state,\n        isEditingNickname: false,\n        editNicknameErrorReason: action.error\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AApPA;AAsPA;AACA;AACA;;;;A","sourceRoot":""}