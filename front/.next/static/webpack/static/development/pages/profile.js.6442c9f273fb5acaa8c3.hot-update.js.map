{"version":3,"file":"static/webpack/static/development/pages/profile.js.6442c9f273fb5acaa8c3.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport {\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWINGS_REQUEST,\n  REMOVE_FOLLOWER_REQUEST,\n  UNFOLLOW_USER_REQUEST,\n} from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\nimport FollowList from '../components/FollowList';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { followingList, followerList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId,\n    });\n  }, []);\n\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length,\n    });\n  }, [followingList.length]);\n\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length,\n    });\n  }, [followerList.length]);\n\n  return (\n    <div>\n      <NicknameEditForm />\n      <FollowList\n        header=\"Following list\"\n        hasMore={hasMoreFollowing}\n        onClickMore={loadMoreFollowings}\n        data={followingList}\n        onClickStop={onUnfollow}\n      />\n      <FollowList\n        header=\"Follower list\"\n        hasMore={hasMoreFollower}\n        onClickMore={loadMoreFollowers}\n        data={followerList}\n        onClickStop={onRemoveFollower}\n      />\n      <div>\n        {mainPosts.map(c => (\n          <PostCard key={+c.createdAt} post={c} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfile.getInitialProps = async (context) => {\n  const state = context.store.getState();\n  // 이 직전에 LOAD_USERS_REQUEST\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id,\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id,\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id,\n  });\n\n  // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\n};\n\nexport default Profile;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;A","sourceRoot":""}