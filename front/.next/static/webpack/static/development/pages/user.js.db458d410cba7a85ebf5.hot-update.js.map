{"version":3,"file":"static/webpack/static/development/pages/user.js.db458d410cba7a85ebf5.hot-update.js","sources":["webpack:///./pages/user.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport { Avatar, Card } from \"antd\";\n\nimport PostCard from \"../components/PostCard\";\n\nconst User = ({ id }) => {\n  const dispatch = useDispatch();\n  const { mainPosts } = useSelector(state => state.post);\n  const { userInfo } = useSelector(state => state.post);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return (\n    <div>\n      {userInfo ? (\n        <Card\n          actions={[\n            <div key=\"twit\">\n              Tweet\n              <br />\n              {me.Post.length}\n            </div>,\n            <div key=\"following\">\n              Following\n              <br />\n              {me.Followings.length}\n            </div>,\n            <div key=\"follower\">\n              Followers\n              <br />\n              {me.Followers.length}\n            </div>\n          ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n            title={userInfo.nickname}\n          />\n        </Card>\n      ) : null}\n      {mainPosts.map(c => {\n        <PostCard key={+c.createdAt} post={c} />;\n      })}\n    </div>\n  );\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = async context => {\n  console.log(\"user getInitialProps\", context.query.id);\n  return { id: parseInt(context.query.id, 10) };\n};\nexport default User;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAIA;AACA;AAAA;AAKA;AAAA;AAKA;AAAA;AAZA;AAoBA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}